apply plugin: 'com.android.application'

def keyFile = new File("key.properties")
def keyProps = new Properties()
keyProps.load(new FileInputStream(keyFile))

android {

    compileSdkVersion project.compileVersion
    buildToolsVersion project.buildVersion

    defaultConfig {
        applicationId "com.worknrole.sample"
        minSdkVersion project.minSDK
        targetSdkVersion project.targetSDK
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        def keyMaps = keyProps['keyMaps']

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled true
            applicationIdSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            resValue "string", "key_maps", keyMaps
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:support-annotations:' + project.supportVersion
    // Local unit test
    testCompile 'junit:junit:' + project.junitVersion
    testCompile 'org.mockito:mockito-core:' + project.mockitoVersion
    testCompile 'org.robolectric:robolectric:' + project.robolectric
    testCompile 'org.assertj:assertj-core:' + project.assertjVersion
    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
    // Instrumental unit test
    androidTestCompile 'com.android.support.test:runner:' + project.testVersion
    androidTestCompile 'com.android.support.test:rules:' + project.testVersion
    androidTestCompile 'org.hamcrest:hamcrest-library:' + project.hamcrestVersion
    androidTestCompile 'com.android.support:support-annotations:' + supportVersion
    // Avoid conflict
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:' + project.espressoVersion
    androidTestCompile('com.android.support.test.espresso:espresso-core:' + project.espressoVersion) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    // Retrofit
    compile 'com.google.code.gson:gson:' + project.gsonVersion
    compile 'com.squareup.retrofit2:retrofit:' + project.retrofitVersion
    compile 'com.squareup.retrofit2:converter-gson:' + project.retrofitVersion
    compile 'com.squareup.okhttp3:logging-interceptor:' + project.okHttpVersion
    compile('com.squareup.retrofit2:converter-simplexml:' + project.retrofitVersion) {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    // Butter knife
    compile 'com.jakewharton:butterknife:' + project.butterKnifeVersion
    annotationProcessor 'com.jakewharton:butterknife-compiler:' + project.butterKnifeVersion
    // Picasso
    compile 'com.squareup.picasso:picasso:' + project.picassoVersion
    // Otto
    compile 'com.squareup:otto:' + project.ottoVersion
    // Support libraries
    compile 'com.android.support:appcompat-v7:' + project.supportVersion
    compile 'com.android.support:support-v4:' + project.supportVersion
    compile 'com.android.support:design:' + project.supportVersion
    compile 'com.android.support:percent:' + project.supportVersion
    // Google API
    compile 'com.google.android.gms:play-services-maps:' + project.googleServiceVersion
}
